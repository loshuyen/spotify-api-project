{"ast":null,"code":"/*!\n * cookie-session\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\nvar Buffer = require('safe-buffer').Buffer;\nvar debug = require('debug')('cookie-session');\nvar Cookies = require('cookies');\nvar onHeaders = require('on-headers');\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = cookieSession;\n\n/**\n * Create a new cookie session middleware.\n *\n * @param {object} [options]\n * @param {boolean} [options.httpOnly=true]\n * @param {array} [options.keys]\n * @param {string} [options.name=session] Name of the cookie to use\n * @param {boolean} [options.overwrite=true]\n * @param {string} [options.secret]\n * @param {boolean} [options.signed=true]\n * @return {function} middleware\n * @public\n */\n\nfunction cookieSession(options) {\n  var opts = options || {};\n\n  // cookie name\n  var name = opts.name || 'session';\n\n  // secrets\n  var keys = opts.keys;\n  if (!keys && opts.secret) keys = [opts.secret];\n\n  // defaults\n  if (opts.overwrite == null) opts.overwrite = true;\n  if (opts.httpOnly == null) opts.httpOnly = true;\n  if (opts.signed == null) opts.signed = true;\n  if (!keys && opts.signed) throw new Error('.keys required.');\n  debug('session options %j', opts);\n  return function _cookieSession(req, res, next) {\n    var cookies = new Cookies(req, res, {\n      keys: keys\n    });\n    var sess;\n\n    // for overriding\n    req.sessionOptions = Object.create(opts);\n\n    // define req.session getter / setter\n    Object.defineProperty(req, 'session', {\n      configurable: true,\n      enumerable: true,\n      get: getSession,\n      set: setSession\n    });\n    function getSession() {\n      // already retrieved\n      if (sess) {\n        return sess;\n      }\n\n      // unset\n      if (sess === false) {\n        return null;\n      }\n\n      // get session\n      if (sess = tryGetSession(cookies, name, req.sessionOptions)) {\n        return sess;\n      }\n\n      // create session\n      debug('new session');\n      return sess = Session.create();\n    }\n    function setSession(val) {\n      if (val == null) {\n        // unset session\n        sess = false;\n        return val;\n      }\n      if (typeof val === 'object') {\n        // create a new session\n        sess = Session.create(val);\n        return sess;\n      }\n      throw new Error('req.session can only be set as null or an object.');\n    }\n    onHeaders(res, function setHeaders() {\n      if (sess === undefined) {\n        // not accessed\n        return;\n      }\n      try {\n        if (sess === false) {\n          // remove\n          debug('remove %s', name);\n          cookies.set(name, '', req.sessionOptions);\n        } else if ((!sess.isNew || sess.isPopulated) && sess.isChanged) {\n          // save populated or non-new changed session\n          debug('save %s', name);\n          cookies.set(name, Session.serialize(sess), req.sessionOptions);\n        }\n      } catch (e) {\n        debug('error saving session %s', e.message);\n      }\n    });\n    next();\n  };\n}\n;\n\n/**\n * Session model.\n *\n * @param {Context} ctx\n * @param {Object} obj\n * @private\n */\n\nfunction Session(ctx, obj) {\n  Object.defineProperty(this, '_ctx', {\n    value: ctx\n  });\n  if (obj) {\n    for (var key in obj) {\n      this[key] = obj[key];\n    }\n  }\n}\n\n/**\n * Create new session.\n * @private\n */\n\nSession.create = function create(obj) {\n  var ctx = new SessionContext();\n  return new Session(ctx, obj);\n};\n\n/**\n * Create session from serialized form.\n * @private\n */\n\nSession.deserialize = function deserialize(str) {\n  var ctx = new SessionContext();\n  var obj = decode(str);\n  ctx._new = false;\n  ctx._val = str;\n  return new Session(ctx, obj);\n};\n\n/**\n * Serialize a session to a string.\n * @private\n */\n\nSession.serialize = function serialize(sess) {\n  return encode(sess);\n};\n\n/**\n * Return if the session is changed for this request.\n *\n * @return {Boolean}\n * @public\n */\n\nObject.defineProperty(Session.prototype, 'isChanged', {\n  get: function getIsChanged() {\n    return this._ctx._new || this._ctx._val !== Session.serialize(this);\n  }\n});\n\n/**\n * Return if the session is new for this request.\n *\n * @return {Boolean}\n * @public\n */\n\nObject.defineProperty(Session.prototype, 'isNew', {\n  get: function getIsNew() {\n    return this._ctx._new;\n  }\n});\n\n/**\n * populated flag, which is just a boolean alias of .length.\n *\n * @return {Boolean}\n * @public\n */\n\nObject.defineProperty(Session.prototype, 'isPopulated', {\n  get: function getIsPopulated() {\n    return Object.keys(this).length > 0;\n  }\n});\n\n/**\n * Session context to store metadata.\n *\n * @private\n */\n\nfunction SessionContext() {\n  this._new = true;\n  this._val = undefined;\n}\n\n/**\n * Decode the base64 cookie value to an object.\n *\n * @param {String} string\n * @return {Object}\n * @private\n */\n\nfunction decode(string) {\n  var body = Buffer.from(string, 'base64').toString('utf8');\n  return JSON.parse(body);\n}\n\n/**\n * Encode an object into a base64-encoded JSON string.\n *\n * @param {Object} body\n * @return {String}\n * @private\n */\n\nfunction encode(body) {\n  var str = JSON.stringify(body);\n  return Buffer.from(str).toString('base64');\n}\n\n/**\n * Try getting a session from a cookie.\n * @private\n */\n\nfunction tryGetSession(cookies, name, opts) {\n  var str = cookies.get(name, opts);\n  if (!str) {\n    return undefined;\n  }\n  debug('parse %s', str);\n  try {\n    return Session.deserialize(str);\n  } catch (err) {\n    return undefined;\n  }\n}","map":{"version":3,"names":["Buffer","require","debug","Cookies","onHeaders","module","exports","cookieSession","options","opts","name","keys","secret","overwrite","httpOnly","signed","Error","_cookieSession","req","res","next","cookies","sess","sessionOptions","Object","create","defineProperty","configurable","enumerable","get","getSession","set","setSession","tryGetSession","Session","val","setHeaders","undefined","isNew","isPopulated","isChanged","serialize","e","message","ctx","obj","value","key","SessionContext","deserialize","str","decode","_new","_val","encode","prototype","getIsChanged","_ctx","getIsNew","getIsPopulated","length","string","body","from","toString","JSON","parse","stringify","err"],"sources":["/Users/shuyen_macbook/Desktop/GMA/node_modules/cookie-session/index.js"],"sourcesContent":["/*!\n * cookie-session\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar Buffer = require('safe-buffer').Buffer\nvar debug = require('debug')('cookie-session')\nvar Cookies = require('cookies')\nvar onHeaders = require('on-headers')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = cookieSession\n\n/**\n * Create a new cookie session middleware.\n *\n * @param {object} [options]\n * @param {boolean} [options.httpOnly=true]\n * @param {array} [options.keys]\n * @param {string} [options.name=session] Name of the cookie to use\n * @param {boolean} [options.overwrite=true]\n * @param {string} [options.secret]\n * @param {boolean} [options.signed=true]\n * @return {function} middleware\n * @public\n */\n\nfunction cookieSession (options) {\n  var opts = options || {}\n\n  // cookie name\n  var name = opts.name || 'session'\n\n  // secrets\n  var keys = opts.keys\n  if (!keys && opts.secret) keys = [opts.secret]\n\n  // defaults\n  if (opts.overwrite == null) opts.overwrite = true\n  if (opts.httpOnly == null) opts.httpOnly = true\n  if (opts.signed == null) opts.signed = true\n\n  if (!keys && opts.signed) throw new Error('.keys required.')\n\n  debug('session options %j', opts)\n\n  return function _cookieSession (req, res, next) {\n    var cookies = new Cookies(req, res, {\n      keys: keys\n    })\n    var sess\n\n    // for overriding\n    req.sessionOptions = Object.create(opts)\n\n    // define req.session getter / setter\n    Object.defineProperty(req, 'session', {\n      configurable: true,\n      enumerable: true,\n      get: getSession,\n      set: setSession\n    })\n\n    function getSession () {\n      // already retrieved\n      if (sess) {\n        return sess\n      }\n\n      // unset\n      if (sess === false) {\n        return null\n      }\n\n      // get session\n      if ((sess = tryGetSession(cookies, name, req.sessionOptions))) {\n        return sess\n      }\n\n      // create session\n      debug('new session')\n      return (sess = Session.create())\n    }\n\n    function setSession (val) {\n      if (val == null) {\n        // unset session\n        sess = false\n        return val\n      }\n\n      if (typeof val === 'object') {\n        // create a new session\n        sess = Session.create(val)\n        return sess\n      }\n\n      throw new Error('req.session can only be set as null or an object.')\n    }\n\n    onHeaders(res, function setHeaders () {\n      if (sess === undefined) {\n        // not accessed\n        return\n      }\n\n      try {\n        if (sess === false) {\n          // remove\n          debug('remove %s', name)\n          cookies.set(name, '', req.sessionOptions)\n        } else if ((!sess.isNew || sess.isPopulated) && sess.isChanged) {\n          // save populated or non-new changed session\n          debug('save %s', name)\n          cookies.set(name, Session.serialize(sess), req.sessionOptions)\n        }\n      } catch (e) {\n        debug('error saving session %s', e.message)\n      }\n    })\n\n    next()\n  }\n};\n\n/**\n * Session model.\n *\n * @param {Context} ctx\n * @param {Object} obj\n * @private\n */\n\nfunction Session (ctx, obj) {\n  Object.defineProperty(this, '_ctx', {\n    value: ctx\n  })\n\n  if (obj) {\n    for (var key in obj) {\n      this[key] = obj[key]\n    }\n  }\n}\n\n/**\n * Create new session.\n * @private\n */\n\nSession.create = function create (obj) {\n  var ctx = new SessionContext()\n  return new Session(ctx, obj)\n}\n\n/**\n * Create session from serialized form.\n * @private\n */\n\nSession.deserialize = function deserialize (str) {\n  var ctx = new SessionContext()\n  var obj = decode(str)\n\n  ctx._new = false\n  ctx._val = str\n\n  return new Session(ctx, obj)\n}\n\n/**\n * Serialize a session to a string.\n * @private\n */\n\nSession.serialize = function serialize (sess) {\n  return encode(sess)\n}\n\n/**\n * Return if the session is changed for this request.\n *\n * @return {Boolean}\n * @public\n */\n\nObject.defineProperty(Session.prototype, 'isChanged', {\n  get: function getIsChanged () {\n    return this._ctx._new || this._ctx._val !== Session.serialize(this)\n  }\n})\n\n/**\n * Return if the session is new for this request.\n *\n * @return {Boolean}\n * @public\n */\n\nObject.defineProperty(Session.prototype, 'isNew', {\n  get: function getIsNew () {\n    return this._ctx._new\n  }\n})\n\n/**\n * populated flag, which is just a boolean alias of .length.\n *\n * @return {Boolean}\n * @public\n */\n\nObject.defineProperty(Session.prototype, 'isPopulated', {\n  get: function getIsPopulated () {\n    return Object.keys(this).length > 0\n  }\n})\n\n/**\n * Session context to store metadata.\n *\n * @private\n */\n\nfunction SessionContext () {\n  this._new = true\n  this._val = undefined\n}\n\n/**\n * Decode the base64 cookie value to an object.\n *\n * @param {String} string\n * @return {Object}\n * @private\n */\n\nfunction decode (string) {\n  var body = Buffer.from(string, 'base64').toString('utf8')\n  return JSON.parse(body)\n}\n\n/**\n * Encode an object into a base64-encoded JSON string.\n *\n * @param {Object} body\n * @return {String}\n * @private\n */\n\nfunction encode (body) {\n  var str = JSON.stringify(body)\n  return Buffer.from(str).toString('base64')\n}\n\n/**\n * Try getting a session from a cookie.\n * @private\n */\n\nfunction tryGetSession (cookies, name, opts) {\n  var str = cookies.get(name, opts)\n\n  if (!str) {\n    return undefined\n  }\n\n  debug('parse %s', str)\n\n  try {\n    return Session.deserialize(str)\n  } catch (err) {\n    return undefined\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAa,CAAC,CAACD,MAAM;AAC1C,IAAIE,KAAK,GAAGD,OAAO,CAAC,OAAO,CAAC,CAAC,gBAAgB,CAAC;AAC9C,IAAIE,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAChC,IAAIG,SAAS,GAAGH,OAAO,CAAC,YAAY,CAAC;;AAErC;AACA;AACA;AACA;;AAEAI,MAAM,CAACC,OAAO,GAAGC,aAAa;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,aAAaA,CAAEC,OAAO,EAAE;EAC/B,IAAIC,IAAI,GAAGD,OAAO,IAAI,CAAC,CAAC;;EAExB;EACA,IAAIE,IAAI,GAAGD,IAAI,CAACC,IAAI,IAAI,SAAS;;EAEjC;EACA,IAAIC,IAAI,GAAGF,IAAI,CAACE,IAAI;EACpB,IAAI,CAACA,IAAI,IAAIF,IAAI,CAACG,MAAM,EAAED,IAAI,GAAG,CAACF,IAAI,CAACG,MAAM,CAAC;;EAE9C;EACA,IAAIH,IAAI,CAACI,SAAS,IAAI,IAAI,EAAEJ,IAAI,CAACI,SAAS,GAAG,IAAI;EACjD,IAAIJ,IAAI,CAACK,QAAQ,IAAI,IAAI,EAAEL,IAAI,CAACK,QAAQ,GAAG,IAAI;EAC/C,IAAIL,IAAI,CAACM,MAAM,IAAI,IAAI,EAAEN,IAAI,CAACM,MAAM,GAAG,IAAI;EAE3C,IAAI,CAACJ,IAAI,IAAIF,IAAI,CAACM,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EAE5Dd,KAAK,CAAC,oBAAoB,EAAEO,IAAI,CAAC;EAEjC,OAAO,SAASQ,cAAcA,CAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;IAC9C,IAAIC,OAAO,GAAG,IAAIlB,OAAO,CAACe,GAAG,EAAEC,GAAG,EAAE;MAClCR,IAAI,EAAEA;IACR,CAAC,CAAC;IACF,IAAIW,IAAI;;IAER;IACAJ,GAAG,CAACK,cAAc,GAAGC,MAAM,CAACC,MAAM,CAAChB,IAAI,CAAC;;IAExC;IACAe,MAAM,CAACE,cAAc,CAACR,GAAG,EAAE,SAAS,EAAE;MACpCS,YAAY,EAAE,IAAI;MAClBC,UAAU,EAAE,IAAI;MAChBC,GAAG,EAAEC,UAAU;MACfC,GAAG,EAAEC;IACP,CAAC,CAAC;IAEF,SAASF,UAAUA,CAAA,EAAI;MACrB;MACA,IAAIR,IAAI,EAAE;QACR,OAAOA,IAAI;MACb;;MAEA;MACA,IAAIA,IAAI,KAAK,KAAK,EAAE;QAClB,OAAO,IAAI;MACb;;MAEA;MACA,IAAKA,IAAI,GAAGW,aAAa,CAACZ,OAAO,EAAEX,IAAI,EAAEQ,GAAG,CAACK,cAAc,CAAC,EAAG;QAC7D,OAAOD,IAAI;MACb;;MAEA;MACApB,KAAK,CAAC,aAAa,CAAC;MACpB,OAAQoB,IAAI,GAAGY,OAAO,CAACT,MAAM,CAAC,CAAC;IACjC;IAEA,SAASO,UAAUA,CAAEG,GAAG,EAAE;MACxB,IAAIA,GAAG,IAAI,IAAI,EAAE;QACf;QACAb,IAAI,GAAG,KAAK;QACZ,OAAOa,GAAG;MACZ;MAEA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;QAC3B;QACAb,IAAI,GAAGY,OAAO,CAACT,MAAM,CAACU,GAAG,CAAC;QAC1B,OAAOb,IAAI;MACb;MAEA,MAAM,IAAIN,KAAK,CAAC,mDAAmD,CAAC;IACtE;IAEAZ,SAAS,CAACe,GAAG,EAAE,SAASiB,UAAUA,CAAA,EAAI;MACpC,IAAId,IAAI,KAAKe,SAAS,EAAE;QACtB;QACA;MACF;MAEA,IAAI;QACF,IAAIf,IAAI,KAAK,KAAK,EAAE;UAClB;UACApB,KAAK,CAAC,WAAW,EAAEQ,IAAI,CAAC;UACxBW,OAAO,CAACU,GAAG,CAACrB,IAAI,EAAE,EAAE,EAAEQ,GAAG,CAACK,cAAc,CAAC;QAC3C,CAAC,MAAM,IAAI,CAAC,CAACD,IAAI,CAACgB,KAAK,IAAIhB,IAAI,CAACiB,WAAW,KAAKjB,IAAI,CAACkB,SAAS,EAAE;UAC9D;UACAtC,KAAK,CAAC,SAAS,EAAEQ,IAAI,CAAC;UACtBW,OAAO,CAACU,GAAG,CAACrB,IAAI,EAAEwB,OAAO,CAACO,SAAS,CAACnB,IAAI,CAAC,EAAEJ,GAAG,CAACK,cAAc,CAAC;QAChE;MACF,CAAC,CAAC,OAAOmB,CAAC,EAAE;QACVxC,KAAK,CAAC,yBAAyB,EAAEwC,CAAC,CAACC,OAAO,CAAC;MAC7C;IACF,CAAC,CAAC;IAEFvB,IAAI,CAAC,CAAC;EACR,CAAC;AACH;AAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASc,OAAOA,CAAEU,GAAG,EAAEC,GAAG,EAAE;EAC1BrB,MAAM,CAACE,cAAc,CAAC,IAAI,EAAE,MAAM,EAAE;IAClCoB,KAAK,EAAEF;EACT,CAAC,CAAC;EAEF,IAAIC,GAAG,EAAE;IACP,KAAK,IAAIE,GAAG,IAAIF,GAAG,EAAE;MACnB,IAAI,CAACE,GAAG,CAAC,GAAGF,GAAG,CAACE,GAAG,CAAC;IACtB;EACF;AACF;;AAEA;AACA;AACA;AACA;;AAEAb,OAAO,CAACT,MAAM,GAAG,SAASA,MAAMA,CAAEoB,GAAG,EAAE;EACrC,IAAID,GAAG,GAAG,IAAII,cAAc,CAAC,CAAC;EAC9B,OAAO,IAAId,OAAO,CAACU,GAAG,EAAEC,GAAG,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACA;;AAEAX,OAAO,CAACe,WAAW,GAAG,SAASA,WAAWA,CAAEC,GAAG,EAAE;EAC/C,IAAIN,GAAG,GAAG,IAAII,cAAc,CAAC,CAAC;EAC9B,IAAIH,GAAG,GAAGM,MAAM,CAACD,GAAG,CAAC;EAErBN,GAAG,CAACQ,IAAI,GAAG,KAAK;EAChBR,GAAG,CAACS,IAAI,GAAGH,GAAG;EAEd,OAAO,IAAIhB,OAAO,CAACU,GAAG,EAAEC,GAAG,CAAC;AAC9B,CAAC;;AAED;AACA;AACA;AACA;;AAEAX,OAAO,CAACO,SAAS,GAAG,SAASA,SAASA,CAAEnB,IAAI,EAAE;EAC5C,OAAOgC,MAAM,CAAChC,IAAI,CAAC;AACrB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;;AAEAE,MAAM,CAACE,cAAc,CAACQ,OAAO,CAACqB,SAAS,EAAE,WAAW,EAAE;EACpD1B,GAAG,EAAE,SAAS2B,YAAYA,CAAA,EAAI;IAC5B,OAAO,IAAI,CAACC,IAAI,CAACL,IAAI,IAAI,IAAI,CAACK,IAAI,CAACJ,IAAI,KAAKnB,OAAO,CAACO,SAAS,CAAC,IAAI,CAAC;EACrE;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEAjB,MAAM,CAACE,cAAc,CAACQ,OAAO,CAACqB,SAAS,EAAE,OAAO,EAAE;EAChD1B,GAAG,EAAE,SAAS6B,QAAQA,CAAA,EAAI;IACxB,OAAO,IAAI,CAACD,IAAI,CAACL,IAAI;EACvB;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA5B,MAAM,CAACE,cAAc,CAACQ,OAAO,CAACqB,SAAS,EAAE,aAAa,EAAE;EACtD1B,GAAG,EAAE,SAAS8B,cAAcA,CAAA,EAAI;IAC9B,OAAOnC,MAAM,CAACb,IAAI,CAAC,IAAI,CAAC,CAACiD,MAAM,GAAG,CAAC;EACrC;AACF,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;;AAEA,SAASZ,cAAcA,CAAA,EAAI;EACzB,IAAI,CAACI,IAAI,GAAG,IAAI;EAChB,IAAI,CAACC,IAAI,GAAGhB,SAAS;AACvB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASc,MAAMA,CAAEU,MAAM,EAAE;EACvB,IAAIC,IAAI,GAAG9D,MAAM,CAAC+D,IAAI,CAACF,MAAM,EAAE,QAAQ,CAAC,CAACG,QAAQ,CAAC,MAAM,CAAC;EACzD,OAAOC,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC;AACzB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASR,MAAMA,CAAEQ,IAAI,EAAE;EACrB,IAAIZ,GAAG,GAAGe,IAAI,CAACE,SAAS,CAACL,IAAI,CAAC;EAC9B,OAAO9D,MAAM,CAAC+D,IAAI,CAACb,GAAG,CAAC,CAACc,QAAQ,CAAC,QAAQ,CAAC;AAC5C;;AAEA;AACA;AACA;AACA;;AAEA,SAAS/B,aAAaA,CAAEZ,OAAO,EAAEX,IAAI,EAAED,IAAI,EAAE;EAC3C,IAAIyC,GAAG,GAAG7B,OAAO,CAACQ,GAAG,CAACnB,IAAI,EAAED,IAAI,CAAC;EAEjC,IAAI,CAACyC,GAAG,EAAE;IACR,OAAOb,SAAS;EAClB;EAEAnC,KAAK,CAAC,UAAU,EAAEgD,GAAG,CAAC;EAEtB,IAAI;IACF,OAAOhB,OAAO,CAACe,WAAW,CAACC,GAAG,CAAC;EACjC,CAAC,CAAC,OAAOkB,GAAG,EAAE;IACZ,OAAO/B,SAAS;EAClB;AACF"},"metadata":{},"sourceType":"script","externalDependencies":[]}